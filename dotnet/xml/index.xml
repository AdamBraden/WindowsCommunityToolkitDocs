<Overview>
  <Assemblies>
    <Assembly Name="Microsoft.Toolkit.Uwp" Version="2.0.0.0">
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright ©  2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("2.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("2.0.0+Branch.master.Sha.19dff74e8fc3e0d67ac971767f1fa59c526b776d")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft.Toolkit.Uwp")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.Toolkit.Uwp")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETCore,Version=v5.0", FrameworkDisplayName=".NET for Windows Universal")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Toolkit.Uwp.DeveloperTools" Version="2.0.0.0">
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright ©  2015")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("2.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("2.0.0+Branch.master.Sha.19dff74e8fc3e0d67ac971767f1fa59c526b776d")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft.Toolkit.Uwp.DeveloperTools")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.Toolkit.Uwp.DeveloperTools")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Resources.NeutralResourcesLanguage("en")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETCore,Version=v5.0", FrameworkDisplayName=".NET for Windows Universal")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Toolkit.Uwp.Notifications" Version="2.0.0.0">
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright ©  2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("2.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("2.0.0+Branch.master.Sha.19dff74e8fc3e0d67ac971767f1fa59c526b776d")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft.Toolkit.Uwp.Notifications")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.Toolkit.Uwp.Notifications")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETCore,Version=v5.0", FrameworkDisplayName=".NET for Windows Universal")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Toolkit.Uwp.UI" Version="2.0.0.0">
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright ©  2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("2.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("2.0.0+Branch.master.Sha.19dff74e8fc3e0d67ac971767f1fa59c526b776d")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft.Toolkit.Uwp.UI")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.Toolkit.Uwp.UI")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETCore,Version=v5.0", FrameworkDisplayName=".NET for Windows Universal")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Toolkit.Uwp.UI.Animations" Version="2.0.0.0">
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright ©  2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("2.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("2.0.0+Branch.master.Sha.19dff74e8fc3e0d67ac971767f1fa59c526b776d")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft.Toolkit.Uwp.UI.Animations")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.Toolkit.Uwp.UI.Animations")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETCore,Version=v5.0", FrameworkDisplayName=".NET for Windows Universal")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="Microsoft.Toolkit.Uwp.UI.Controls" Version="2.0.0.0">
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright ©  2016")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("2.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("2.0.0+Branch.master.Sha.19dff74e8fc3e0d67ac971767f1fa59c526b776d")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Microsoft.Toolkit.Uwp.UI.LayoutControls")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Microsoft.Toolkit.Uwp.UI.LayoutControls")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("UnitTests")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("UniversalMarkdownUnitTests")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Versioning.TargetFramework(".NETCore,Version=v5.0", FrameworkDisplayName=".NET for Windows Universal")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="Microsoft.Toolkit.Uwp">
      <Type Name="HslColor" Kind="Structure" />
      <Type Name="HsvColor" Kind="Structure" />
      <Type Name="HttpHelper" Kind="Class" />
      <Type Name="HttpHelperRequest" Kind="Class" />
      <Type Name="HttpHelperResponse" Kind="Class" />
      <Type Name="IIncrementalSource`1" DisplayName="IIncrementalSource&lt;TSource&gt;" Kind="Interface" />
      <Type Name="IncrementalLoadingCollection`2" DisplayName="IncrementalLoadingCollection&lt;TSource,IType&gt;" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.DeveloperTools">
      <Type Name="AlignmentGrid" Kind="Class" />
      <Type Name="FocusTracker" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.DeveloperTools.Microsoft_Toolkit_Uwp_DeveloperTools_XamlTypeInfo">
      <Type Name="XamlMetaDataProvider" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.Helpers">
      <Type Name="BackgroundTaskHelper" Kind="Class" />
      <Type Name="BaseObjectStorageHelper" Kind="Class" />
      <Type Name="CollectionFormingDeepLinkParser" Kind="Class" />
      <Type Name="ColorHelper" Kind="Class" />
      <Type Name="DeepLinkParser" Kind="Class" />
      <Type Name="DispatcherHelper" Kind="Class" />
      <Type Name="IObjectStorageHelper" Kind="Interface" />
      <Type Name="LocalObjectStorageHelper" Kind="Class" />
      <Type Name="OSVersion" Kind="Structure" />
      <Type Name="PrintHelper" Kind="Class" />
      <Type Name="QueryParameterCollection" Kind="Class" />
      <Type Name="RoamingObjectStorageHelper" Kind="Class" />
      <Type Name="ScreenUnit" Kind="Enumeration" />
      <Type Name="ScreenUnitHelper" Kind="Class" />
      <Type Name="StorageFileHelper" Kind="Class" />
      <Type Name="StreamHelper" Kind="Class" />
      <Type Name="SystemInformation" Kind="Class" />
      <Type Name="WeakEventListener`3" DisplayName="WeakEventListener&lt;TInstance,TSource,TEventArgs&gt;" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.Notifications">
      <Type Name="AdaptiveGroup" Kind="Class" />
      <Type Name="AdaptiveImage" Kind="Class" />
      <Type Name="AdaptiveImageAlign" Kind="Enumeration" />
      <Type Name="AdaptiveImageCrop" Kind="Enumeration" />
      <Type Name="AdaptiveProgressBar" Kind="Class" />
      <Type Name="AdaptiveProgressBarValue" Kind="Class" />
      <Type Name="AdaptiveSubgroup" Kind="Class" />
      <Type Name="AdaptiveSubgroupTextStacking" Kind="Enumeration" />
      <Type Name="AdaptiveText" Kind="Class" />
      <Type Name="AdaptiveTextAlign" Kind="Enumeration" />
      <Type Name="AdaptiveTextStyle" Kind="Enumeration" />
      <Type Name="BadgeGlyphContent" Kind="Class" />
      <Type Name="BadgeGlyphValue" Kind="Enumeration" />
      <Type Name="BadgeNumericContent" Kind="Class" />
      <Type Name="BindableProgressBarValue" Kind="Class" />
      <Type Name="BindableString" Kind="Class" />
      <Type Name="IAdaptiveChild" Kind="Interface" />
      <Type Name="IAdaptiveSubgroupChild" Kind="Interface" />
      <Type Name="IBaseImage" Kind="Interface" />
      <Type Name="IBaseText" Kind="Interface" />
      <Type Name="INotificationContent" Kind="Interface" />
      <Type Name="ITileBindingContent" Kind="Interface" />
      <Type Name="ITileBindingContentAdaptiveChild" Kind="Interface" />
      <Type Name="IToastActions" Kind="Interface" />
      <Type Name="IToastBindingGenericChild" Kind="Interface" />
      <Type Name="IToastButton" Kind="Interface" />
      <Type Name="IToastInput" Kind="Interface" />
      <Type Name="TileBackgroundImage" Kind="Class" />
      <Type Name="TileBackgroundImageCrop" Kind="Enumeration" />
      <Type Name="TileBasicImage" Kind="Class" />
      <Type Name="TileBasicText" Kind="Class" />
      <Type Name="TileBinding" Kind="Class" />
      <Type Name="TileBindingContentAdaptive" Kind="Class" />
      <Type Name="TileBindingContentContact" Kind="Class" />
      <Type Name="TileBindingContentIconic" Kind="Class" />
      <Type Name="TileBindingContentPeople" Kind="Class" />
      <Type Name="TileBindingContentPhotos" Kind="Class" />
      <Type Name="TileBranding" Kind="Enumeration" />
      <Type Name="TileContent" Kind="Class" />
      <Type Name="TilePeekImage" Kind="Class" />
      <Type Name="TilePeekImageCrop" Kind="Enumeration" />
      <Type Name="TileTextStacking" Kind="Enumeration" />
      <Type Name="TileVisual" Kind="Class" />
      <Type Name="ToastActionsCustom" Kind="Class" />
      <Type Name="ToastActionsSnoozeAndDismiss" Kind="Class" />
      <Type Name="ToastActivationOptions" Kind="Class" />
      <Type Name="ToastActivationType" Kind="Enumeration" />
      <Type Name="ToastAfterActivationBehavior" Kind="Enumeration" />
      <Type Name="ToastAudio" Kind="Class" />
      <Type Name="ToastBindingGeneric" Kind="Class" />
      <Type Name="ToastButton" Kind="Class" />
      <Type Name="ToastButtonDismiss" Kind="Class" />
      <Type Name="ToastButtonSnooze" Kind="Class" />
      <Type Name="ToastContent" Kind="Class" />
      <Type Name="ToastContextMenuItem" Kind="Class" />
      <Type Name="ToastDuration" Kind="Enumeration" />
      <Type Name="ToastGenericAppLogo" Kind="Class" />
      <Type Name="ToastGenericAppLogoCrop" Kind="Enumeration" />
      <Type Name="ToastGenericAttributionText" Kind="Class" />
      <Type Name="ToastGenericHeroImage" Kind="Class" />
      <Type Name="ToastHeader" Kind="Class" />
      <Type Name="ToastImageCrop" Kind="Enumeration" />
      <Type Name="ToastScenario" Kind="Enumeration" />
      <Type Name="ToastSelectionBox" Kind="Class" />
      <Type Name="ToastSelectionBoxItem" Kind="Class" />
      <Type Name="ToastTextBox" Kind="Class" />
      <Type Name="ToastVisual" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI">
      <Type Name="AdvancedCollectionView" Kind="Class" />
      <Type Name="AdvancedCollectionView+NotificationDeferrer" Kind="Class" />
      <Type Name="CacheBase`1" DisplayName="CacheBase&lt;T&gt;" Kind="Class" />
      <Type Name="FileCache" Kind="Class" />
      <Type Name="HyperlinkExtensions" Kind="Class" />
      <Type Name="IAdvancedCollectionView" Kind="Interface" />
      <Type Name="ImageCache" Kind="Class" />
      <Type Name="InMemoryStorage`1" DisplayName="InMemoryStorage&lt;T&gt;" Kind="Class" />
      <Type Name="InMemoryStorageItem`1" DisplayName="InMemoryStorageItem&lt;T&gt;" Kind="Class" />
      <Type Name="ListViewBaseExtensions" Kind="Class" />
      <Type Name="SortDescription" Kind="Class" />
      <Type Name="SortDirection" Kind="Enumeration" />
      <Type Name="WebViewExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Animations">
      <Type Name="AnimationExtensions" Kind="Class" />
      <Type Name="AnimationSet" Kind="Class" />
      <Type Name="AnimationSetCompletedEventArgs" Kind="Class" />
      <Type Name="AnimationSetState" Kind="Enumeration" />
      <Type Name="EasingType" Kind="Enumeration" />
      <Type Name="LoadTimeEffectHandler" Kind="Delegate" />
      <Type Name="ParallaxService" Kind="Class" />
      <Type Name="ReorderGridAnimation" Kind="Class" />
      <Type Name="SurfaceLoader" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Animations.Behaviors">
      <Type Name="BehaviorBase`1" DisplayName="BehaviorBase&lt;T&gt;" Kind="Class" />
      <Type Name="Blur" Kind="Class" />
      <Type Name="CompositionBehaviorBase" Kind="Class" />
      <Type Name="CompositionBehaviorBase`1" DisplayName="CompositionBehaviorBase&lt;T&gt;" Kind="Class" />
      <Type Name="Fade" Kind="Class" />
      <Type Name="FadeHeaderBehavior" Kind="Class" />
      <Type Name="Light" Kind="Class" />
      <Type Name="Offset" Kind="Class" />
      <Type Name="QuickReturnHeaderBehavior" Kind="Class" />
      <Type Name="Rotate" Kind="Class" />
      <Type Name="Saturation" Kind="Class" />
      <Type Name="Scale" Kind="Class" />
      <Type Name="StickyHeaderBehavior" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Animations.Effects">
      <Type Name="AnimationEffect" Kind="Class" />
      <Type Name="Blur" Kind="Class" />
      <Type Name="Saturation" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Animations.Expressions">
      <Type Name="AmbientLightReferenceNode" Kind="Class" />
      <Type Name="BooleanNode" Kind="Class" />
      <Type Name="ColorBrushReferenceNode" Kind="Class" />
      <Type Name="ColorNode" Kind="Class" />
      <Type Name="CompositionExtensions" Kind="Class" />
      <Type Name="DistantLightReferenceNode" Kind="Class" />
      <Type Name="DropShadowReferenceNode" Kind="Class" />
      <Type Name="ExpressionFunctions" Kind="Class" />
      <Type Name="ExpressionNode" Kind="Class" />
      <Type Name="ExpressionValues" Kind="Class" />
      <Type Name="ExpressionValues+Constant" Kind="Class" />
      <Type Name="ExpressionValues+CurrentValue" Kind="Class" />
      <Type Name="ExpressionValues+Reference" Kind="Class" />
      <Type Name="ExpressionValues+StartingValue" Kind="Class" />
      <Type Name="ExpressionValues+Target" Kind="Class" />
      <Type Name="InsetClipReferenceNode" Kind="Class" />
      <Type Name="InteractionTrackerReferenceNode" Kind="Class" />
      <Type Name="ManipulationPropertySetReferenceNode" Kind="Class" />
      <Type Name="Matrix3x2Node" Kind="Class" />
      <Type Name="Matrix3x2Node+Subchannel" Kind="Enumeration" />
      <Type Name="Matrix4x4Node" Kind="Class" />
      <Type Name="Matrix4x4Node+Subchannel" Kind="Enumeration" />
      <Type Name="NineGridBrushReferenceNode" Kind="Class" />
      <Type Name="PointerPositionPropertySetReferenceNode" Kind="Class" />
      <Type Name="PointLightReferenceNode" Kind="Class" />
      <Type Name="PropertySetReferenceNode" Kind="Class" />
      <Type Name="QuaternionNode" Kind="Class" />
      <Type Name="ReferenceNode" Kind="Class" />
      <Type Name="ScalarNode" Kind="Class" />
      <Type Name="SpotLightReferenceNode" Kind="Class" />
      <Type Name="SurfaceBrushReferenceNode" Kind="Class" />
      <Type Name="Vector2Node" Kind="Class" />
      <Type Name="Vector2Node+Subchannel" Kind="Enumeration" />
      <Type Name="Vector3Node" Kind="Class" />
      <Type Name="Vector3Node+Subchannel" Kind="Enumeration" />
      <Type Name="Vector4Node" Kind="Class" />
      <Type Name="Vector4Node+Subchannel" Kind="Enumeration" />
      <Type Name="VisualReferenceNode" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Controls">
      <Type Name="AdaptiveGridView" Kind="Class" />
      <Type Name="BladeItem" Kind="Class" />
      <Type Name="BladeMode" Kind="Enumeration" />
      <Type Name="BladeView" Kind="Class" />
      <Type Name="Carousel" Kind="Class" />
      <Type Name="CarouselPanel" Kind="Class" />
      <Type Name="DropShadowPanel" Kind="Class" />
      <Type Name="EditorChangedArgs" Kind="Class" />
      <Type Name="ExpandDirection" Kind="Enumeration" />
      <Type Name="Expander" Kind="Class" />
      <Type Name="GridSplitter" Kind="Class" />
      <Type Name="GridSplitter+GridResizeBehavior" Kind="Enumeration" />
      <Type Name="GridSplitter+GridResizeDirection" Kind="Enumeration" />
      <Type Name="GridSplitter+GripperCursorType" Kind="Enumeration" />
      <Type Name="GridSplitter+SplitterCursorBehavior" Kind="Enumeration" />
      <Type Name="HamburgerMenu" Kind="Class" />
      <Type Name="HamburgerMenuGlyphItem" Kind="Class" />
      <Type Name="HamburgerMenuImageItem" Kind="Class" />
      <Type Name="HamburgerMenuItem" Kind="Class" />
      <Type Name="HamburgerMenuItemCollection" Kind="Class" />
      <Type Name="HeaderedTextBlock" Kind="Class" />
      <Type Name="ImageAlignment" Kind="Enumeration" />
      <Type Name="ImageEx" Kind="Class" />
      <Type Name="ImageExBase" Kind="Class" />
      <Type Name="ImageExFailedEventArgs" Kind="Class" />
      <Type Name="ImageExFailedEventHandler" Kind="Delegate" />
      <Type Name="ImageExOpenedEventArgs" Kind="Class" />
      <Type Name="ImageExOpenedEventHandler" Kind="Delegate" />
      <Type Name="ImageResolvingEventArgs" Kind="Class" />
      <Type Name="InAppNotification" Kind="Class" />
      <Type Name="LayoutTransformControl" Kind="Class" />
      <Type Name="LinkClickedEventArgs" Kind="Class" />
      <Type Name="Loading" Kind="Class" />
      <Type Name="MarkdownRenderedEventArgs" Kind="Class" />
      <Type Name="MarkdownTextBlock" Kind="Class" />
      <Type Name="MasterDetailsView" Kind="Class" />
      <Type Name="MasterDetailsViewState" Kind="Enumeration" />
      <Type Name="Menu" Kind="Class" />
      <Type Name="MenuItem" Kind="Class" />
      <Type Name="OrbitView" Kind="Class" />
      <Type Name="OrbitViewDataItem" Kind="Class" />
      <Type Name="OrbitViewDataItemCollection" Kind="Class" />
      <Type Name="OrbitViewElementProperties" Kind="Class" />
      <Type Name="OrbitViewItem" Kind="Class" />
      <Type Name="OrbitViewItemClickedEventArgs" Kind="Class" />
      <Type Name="OrbitViewPanel" Kind="Class" />
      <Type Name="OrbitViewPanelItemArrangedArgs" Kind="Class" />
      <Type Name="OrbitViewPanelItemsArrangedArgs" Kind="Class" />
      <Type Name="Proj" Kind="Structure" />
      <Type Name="PullToRefreshListView" Kind="Class" />
      <Type Name="RadialGauge" Kind="Class" />
      <Type Name="RadialProgressBar" Kind="Class" />
      <Type Name="RangeChangedEventArgs" Kind="Class" />
      <Type Name="RangeSelector" Kind="Class" />
      <Type Name="RangeSelectorProperty" Kind="Enumeration" />
      <Type Name="RefreshProgressEventArgs" Kind="Class" />
      <Type Name="RotatorTile" Kind="Class" />
      <Type Name="RotatorTile+RotateDirection" Kind="Enumeration" />
      <Type Name="RoundImageEx" Kind="Class" />
      <Type Name="ScrollHeader" Kind="Class" />
      <Type Name="ScrollHeaderMode" Kind="Enumeration" />
      <Type Name="ScrollOrientation" Kind="Enumeration" />
      <Type Name="ShortcutKeyRequestArgs" Kind="Class" />
      <Type Name="SlidableListItem" Kind="Class" />
      <Type Name="SurfaceDialTextboxHelper" Kind="Class" />
      <Type Name="SwipeStatus" Kind="Enumeration" />
      <Type Name="SwipeStatusChangedEventArgs" Kind="Class" />
      <Type Name="TextBoxMask" Kind="Class" />
      <Type Name="TextBoxRegex" Kind="Class" />
      <Type Name="TextToolbar" Kind="Class" />
      <Type Name="TextToolbarStrings" Kind="Class" />
      <Type Name="TileControl" Kind="Class" />
      <Type Name="WrapPanel" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Controls.Markdown.Parse">
      <Type Name="ColumnAlignment" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Controls.Microsoft_Toolkit_Uwp_UI_Controls_XamlTypeInfo">
      <Type Name="XamlMetaDataProvider" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons">
      <Type Name="ButtonMap" Kind="Class" />
      <Type Name="ButtonType" Kind="Enumeration" />
      <Type Name="DefaultButton" Kind="Class" />
      <Type Name="DefaultButtonModificationList" Kind="Class" />
      <Type Name="IToolbarItem" Kind="Interface" />
      <Type Name="ToolbarButton" Kind="Class" />
      <Type Name="ToolbarSeparator" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.Common">
      <Type Name="CommonButtons" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats">
      <Type Name="ButtonActions" Kind="Class" />
      <Type Name="Format" Kind="Enumeration" />
      <Type Name="Formatter" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown">
      <Type Name="MarkDownButtonActions" Kind="Class" />
      <Type Name="MarkDownFormatter" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.RichText">
      <Type Name="RichTextButtonActions" Kind="Class" />
      <Type Name="RichTextFormatter" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarSymbols">
      <Type Name="List" Kind="Class" />
      <Type Name="NumberedList" Kind="Class" />
      <Type Name="Symbol" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Converters">
      <Type Name="BoolNegationConverter" Kind="Class" />
      <Type Name="BoolToObjectConverter" Kind="Class" />
      <Type Name="BoolToVisibilityConverter" Kind="Class" />
      <Type Name="CollectionVisibilityConverter" Kind="Class" />
      <Type Name="EmptyCollectionToObjectConverter" Kind="Class" />
      <Type Name="EmptyObjectToObjectConverter" Kind="Class" />
      <Type Name="EmptyStringToObjectConverter" Kind="Class" />
      <Type Name="FormatStringConverter" Kind="Class" />
      <Type Name="ResourceNameToResourceStringConverter" Kind="Class" />
      <Type Name="StringFormatConverter" Kind="Class" />
      <Type Name="StringVisibilityConverter" Kind="Class" />
      <Type Name="ToolbarFormatActiveConverter" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Extensions">
      <Type Name="ApplicationView" Kind="Class" />
      <Type Name="Hyperlink" Kind="Class" />
      <Type Name="ListViewBase" Kind="Class" />
      <Type Name="ListViewBase+StretchDirection" Kind="Enumeration" />
      <Type Name="LogicalTree" Kind="Class" />
      <Type Name="StatusBar" Kind="Class" />
      <Type Name="SurfaceDialTextbox" Kind="Class" />
      <Type Name="TextBoxMask" Kind="Class" />
      <Type Name="TextBoxRegex" Kind="Class" />
      <Type Name="TextBoxRegex+ValidationMode" Kind="Enumeration" />
      <Type Name="TextBoxRegex+ValidationType" Kind="Enumeration" />
      <Type Name="TitleBar" Kind="Class" />
      <Type Name="VisualTree" Kind="Class" />
      <Type Name="WebView" Kind="Class" />
    </Namespace>
    <Namespace Name="Microsoft.Toolkit.Uwp.UI.Helpers">
      <Type Name="BindableValueHolder" Kind="Class" />
      <Type Name="DependencyPropertyWatcher`1" DisplayName="DependencyPropertyWatcher&lt;T&gt;" Kind="Class" />
    </Namespace>
  </Types>
  <Title>Untitled</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="ToColor">
        <MemberSignature Language="C#" Value="public static Windows.UI.Color ToColor (this string colorString);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Windows.UI.Color ToColor(string colorString) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToColor(System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Windows.UI.Color</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="colorString" Type="System.String" RefType="this" />
        </Parameters>
        <Docs>
          <param name="colorString">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.ColorHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToColor(System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Color" />
      </Targets>
      <Member MemberName="ToHex">
        <MemberSignature Language="C#" Value="public static string ToHex (this Windows.UI.Color color);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToHex(valuetype Windows.UI.Color color) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToHex(Windows.UI.Color)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Windows.UI.Color" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.ColorHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToHex(Windows.UI.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Color" />
      </Targets>
      <Member MemberName="ToHsl">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.HslColor ToHsl (this Windows.UI.Color color);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Toolkit.Uwp.HslColor ToHsl(valuetype Windows.UI.Color color) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToHsl(Windows.UI.Color)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.HslColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Windows.UI.Color" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.ColorHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToHsl(Windows.UI.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Color" />
      </Targets>
      <Member MemberName="ToHsv">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.HsvColor ToHsv (this Windows.UI.Color color);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Toolkit.Uwp.HsvColor ToHsv(valuetype Windows.UI.Color color) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToHsv(Windows.UI.Color)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.HsvColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Windows.UI.Color" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.ColorHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToHsv(Windows.UI.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Color" />
      </Targets>
      <Member MemberName="ToInt">
        <MemberSignature Language="C#" Value="public static int ToInt (this Windows.UI.Color color);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt(valuetype Windows.UI.Color color) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToInt(Windows.UI.Color)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="color" Type="Windows.UI.Color" RefType="this" />
        </Parameters>
        <Docs>
          <param name="color">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.ColorHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.ColorHelper.ToInt(Windows.UI.Color)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Core.CoreDispatcher" />
      </Targets>
      <Member MemberName="AwaitableRunAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AwaitableRunAsync (this Windows.UI.Core.CoreDispatcher dispatcher, Action function, Windows.UI.Core.CoreDispatcherPriority priority = Windows.UI.Core.CoreDispatcherPriority.Normal);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AwaitableRunAsync(class Windows.UI.Core.CoreDispatcher dispatcher, class System.Action function, valuetype Windows.UI.Core.CoreDispatcherPriority priority) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.AwaitableRunAsync(Windows.UI.Core.CoreDispatcher,System.Action,Windows.UI.Core.CoreDispatcherPriority)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="dispatcher" Type="Windows.UI.Core.CoreDispatcher" RefType="this" />
          <Parameter Name="function" Type="System.Action" />
          <Parameter Name="priority" Type="Windows.UI.Core.CoreDispatcherPriority" />
        </Parameters>
        <Docs>
          <param name="dispatcher">To be added.</param>
          <param name="function">To be added.</param>
          <param name="priority">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.AwaitableRunAsync(Windows.UI.Core.CoreDispatcher,System.Action,Windows.UI.Core.CoreDispatcherPriority)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Core.CoreDispatcher" />
      </Targets>
      <Member MemberName="AwaitableRunAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AwaitableRunAsync (this Windows.UI.Core.CoreDispatcher dispatcher, Func&lt;System.Threading.Tasks.Task&gt; function, Windows.UI.Core.CoreDispatcherPriority priority = Windows.UI.Core.CoreDispatcherPriority.Normal);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AwaitableRunAsync(class Windows.UI.Core.CoreDispatcher dispatcher, class System.Func`1&lt;class System.Threading.Tasks.Task&gt; function, valuetype Windows.UI.Core.CoreDispatcherPriority priority) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.AwaitableRunAsync(Windows.UI.Core.CoreDispatcher,System.Func{System.Threading.Tasks.Task},Windows.UI.Core.CoreDispatcherPriority)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="dispatcher" Type="Windows.UI.Core.CoreDispatcher" RefType="this" />
          <Parameter Name="function" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
          <Parameter Name="priority" Type="Windows.UI.Core.CoreDispatcherPriority" />
        </Parameters>
        <Docs>
          <param name="dispatcher">To be added.</param>
          <param name="function">To be added.</param>
          <param name="priority">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.AwaitableRunAsync(Windows.UI.Core.CoreDispatcher,System.Func{System.Threading.Tasks.Task},Windows.UI.Core.CoreDispatcherPriority)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Core.CoreDispatcher" />
      </Targets>
      <Member MemberName="AwaitableRunAsync&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; AwaitableRunAsync&lt;T&gt; (this Windows.UI.Core.CoreDispatcher dispatcher, Func&lt;T&gt; function, Windows.UI.Core.CoreDispatcherPriority priority = Windows.UI.Core.CoreDispatcherPriority.Normal);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; AwaitableRunAsync&lt;T&gt;(class Windows.UI.Core.CoreDispatcher dispatcher, class System.Func`1&lt;!!T&gt; function, valuetype Windows.UI.Core.CoreDispatcherPriority priority) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.AwaitableRunAsync``1(Windows.UI.Core.CoreDispatcher,System.Func{``0},Windows.UI.Core.CoreDispatcherPriority)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="dispatcher" Type="Windows.UI.Core.CoreDispatcher" RefType="this" />
          <Parameter Name="function" Type="System.Func&lt;T&gt;" />
          <Parameter Name="priority" Type="Windows.UI.Core.CoreDispatcherPriority" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="dispatcher">To be added.</param>
          <param name="function">To be added.</param>
          <param name="priority">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.AwaitableRunAsync``1(Windows.UI.Core.CoreDispatcher,System.Func{``0},Windows.UI.Core.CoreDispatcherPriority)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Core.CoreDispatcher" />
      </Targets>
      <Member MemberName="AwaitableRunAsync&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; AwaitableRunAsync&lt;T&gt; (this Windows.UI.Core.CoreDispatcher dispatcher, Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt; function, Windows.UI.Core.CoreDispatcherPriority priority = Windows.UI.Core.CoreDispatcherPriority.Normal);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; AwaitableRunAsync&lt;T&gt;(class Windows.UI.Core.CoreDispatcher dispatcher, class System.Func`1&lt;class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; function, valuetype Windows.UI.Core.CoreDispatcherPriority priority) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.AwaitableRunAsync``1(Windows.UI.Core.CoreDispatcher,System.Func{System.Threading.Tasks.Task{``0}},Windows.UI.Core.CoreDispatcherPriority)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="dispatcher" Type="Windows.UI.Core.CoreDispatcher" RefType="this" />
          <Parameter Name="function" Type="System.Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt;" />
          <Parameter Name="priority" Type="Windows.UI.Core.CoreDispatcherPriority" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="dispatcher">To be added.</param>
          <param name="function">To be added.</param>
          <param name="priority">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.AwaitableRunAsync``1(Windows.UI.Core.CoreDispatcher,System.Func{System.Threading.Tasks.Task{``0}},Windows.UI.Core.CoreDispatcherPriority)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.ApplicationModel.Core.CoreApplicationView" />
      </Targets>
      <Member MemberName="ExecuteOnUIThreadAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ExecuteOnUIThreadAsync (this Windows.ApplicationModel.Core.CoreApplicationView viewToExecuteOn, Action function, Windows.UI.Core.CoreDispatcherPriority priority = Windows.UI.Core.CoreDispatcherPriority.Normal);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ExecuteOnUIThreadAsync(class Windows.ApplicationModel.Core.CoreApplicationView viewToExecuteOn, class System.Action function, valuetype Windows.UI.Core.CoreDispatcherPriority priority) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.ExecuteOnUIThreadAsync(Windows.ApplicationModel.Core.CoreApplicationView,System.Action,Windows.UI.Core.CoreDispatcherPriority)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="viewToExecuteOn" Type="Windows.ApplicationModel.Core.CoreApplicationView" RefType="this" />
          <Parameter Name="function" Type="System.Action" />
          <Parameter Name="priority" Type="Windows.UI.Core.CoreDispatcherPriority" />
        </Parameters>
        <Docs>
          <param name="viewToExecuteOn">To be added.</param>
          <param name="function">To be added.</param>
          <param name="priority">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.ExecuteOnUIThreadAsync(Windows.ApplicationModel.Core.CoreApplicationView,System.Action,Windows.UI.Core.CoreDispatcherPriority)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.ApplicationModel.Core.CoreApplicationView" />
      </Targets>
      <Member MemberName="ExecuteOnUIThreadAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ExecuteOnUIThreadAsync (this Windows.ApplicationModel.Core.CoreApplicationView viewToExecuteOn, Func&lt;System.Threading.Tasks.Task&gt; function, Windows.UI.Core.CoreDispatcherPriority priority = Windows.UI.Core.CoreDispatcherPriority.Normal);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ExecuteOnUIThreadAsync(class Windows.ApplicationModel.Core.CoreApplicationView viewToExecuteOn, class System.Func`1&lt;class System.Threading.Tasks.Task&gt; function, valuetype Windows.UI.Core.CoreDispatcherPriority priority) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.ExecuteOnUIThreadAsync(Windows.ApplicationModel.Core.CoreApplicationView,System.Func{System.Threading.Tasks.Task},Windows.UI.Core.CoreDispatcherPriority)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="viewToExecuteOn" Type="Windows.ApplicationModel.Core.CoreApplicationView" RefType="this" />
          <Parameter Name="function" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
          <Parameter Name="priority" Type="Windows.UI.Core.CoreDispatcherPriority" />
        </Parameters>
        <Docs>
          <param name="viewToExecuteOn">To be added.</param>
          <param name="function">To be added.</param>
          <param name="priority">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.ExecuteOnUIThreadAsync(Windows.ApplicationModel.Core.CoreApplicationView,System.Func{System.Threading.Tasks.Task},Windows.UI.Core.CoreDispatcherPriority)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.ApplicationModel.Core.CoreApplicationView" />
      </Targets>
      <Member MemberName="ExecuteOnUIThreadAsync&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; ExecuteOnUIThreadAsync&lt;T&gt; (this Windows.ApplicationModel.Core.CoreApplicationView viewToExecuteOn, Func&lt;T&gt; function, Windows.UI.Core.CoreDispatcherPriority priority = Windows.UI.Core.CoreDispatcherPriority.Normal);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; ExecuteOnUIThreadAsync&lt;T&gt;(class Windows.ApplicationModel.Core.CoreApplicationView viewToExecuteOn, class System.Func`1&lt;!!T&gt; function, valuetype Windows.UI.Core.CoreDispatcherPriority priority) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.ExecuteOnUIThreadAsync``1(Windows.ApplicationModel.Core.CoreApplicationView,System.Func{``0},Windows.UI.Core.CoreDispatcherPriority)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="viewToExecuteOn" Type="Windows.ApplicationModel.Core.CoreApplicationView" RefType="this" />
          <Parameter Name="function" Type="System.Func&lt;T&gt;" />
          <Parameter Name="priority" Type="Windows.UI.Core.CoreDispatcherPriority" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="viewToExecuteOn">To be added.</param>
          <param name="function">To be added.</param>
          <param name="priority">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.ExecuteOnUIThreadAsync``1(Windows.ApplicationModel.Core.CoreApplicationView,System.Func{``0},Windows.UI.Core.CoreDispatcherPriority)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.ApplicationModel.Core.CoreApplicationView" />
      </Targets>
      <Member MemberName="ExecuteOnUIThreadAsync&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; ExecuteOnUIThreadAsync&lt;T&gt; (this Windows.ApplicationModel.Core.CoreApplicationView viewToExecuteOn, Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt; function, Windows.UI.Core.CoreDispatcherPriority priority = Windows.UI.Core.CoreDispatcherPriority.Normal);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; ExecuteOnUIThreadAsync&lt;T&gt;(class Windows.ApplicationModel.Core.CoreApplicationView viewToExecuteOn, class System.Func`1&lt;class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; function, valuetype Windows.UI.Core.CoreDispatcherPriority priority) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.ExecuteOnUIThreadAsync``1(Windows.ApplicationModel.Core.CoreApplicationView,System.Func{System.Threading.Tasks.Task{``0}},Windows.UI.Core.CoreDispatcherPriority)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T" />
        </TypeParameters>
        <Parameters>
          <Parameter Name="viewToExecuteOn" Type="Windows.ApplicationModel.Core.CoreApplicationView" RefType="this" />
          <Parameter Name="function" Type="System.Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt;" />
          <Parameter Name="priority" Type="Windows.UI.Core.CoreDispatcherPriority" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="viewToExecuteOn">To be added.</param>
          <param name="function">To be added.</param>
          <param name="priority">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.DispatcherHelper.ExecuteOnUIThreadAsync``1(Windows.ApplicationModel.Core.CoreApplicationView,System.Func{System.Threading.Tasks.Task{``0}},Windows.UI.Core.CoreDispatcherPriority)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Storage.StorageFolder" />
      </Targets>
      <Member MemberName="FileExistsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; FileExistsAsync (this Windows.Storage.StorageFolder folder, string fileName, bool isRecursive = false);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; FileExistsAsync(class Windows.Storage.StorageFolder folder, string fileName, bool isRecursive) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.FileExistsAsync(Windows.Storage.StorageFolder,System.String,System.Boolean)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="folder" Type="Windows.Storage.StorageFolder" RefType="this" />
          <Parameter Name="fileName" Type="System.String" />
          <Parameter Name="isRecursive" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="folder">To be added.</param>
          <param name="fileName">To be added.</param>
          <param name="isRecursive">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.FileExistsAsync(Windows.Storage.StorageFolder,System.String,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Storage.StorageFile" />
      </Targets>
      <Member MemberName="ReadBytesAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;byte[]&gt; ReadBytesAsync (this Windows.Storage.StorageFile file);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadBytesAsync(class Windows.Storage.StorageFile file) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesAsync(Windows.Storage.StorageFile)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="file" Type="Windows.Storage.StorageFile" RefType="this" />
        </Parameters>
        <Docs>
          <param name="file">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesAsync(Windows.Storage.StorageFile)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Storage.StorageFolder" />
      </Targets>
      <Member MemberName="ReadBytesFromFileAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;byte[]&gt; ReadBytesFromFileAsync (this Windows.Storage.StorageFolder fileLocation, string fileName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadBytesFromFileAsync(class Windows.Storage.StorageFolder fileLocation, string fileName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromFileAsync(Windows.Storage.StorageFolder,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="fileLocation" Type="Windows.Storage.StorageFolder" RefType="this" />
          <Parameter Name="fileName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="fileLocation">To be added.</param>
          <param name="fileName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromFileAsync(Windows.Storage.StorageFolder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Storage.StorageFolder" />
      </Targets>
      <Member MemberName="ReadTextFromFileAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ReadTextFromFileAsync (this Windows.Storage.StorageFolder fileLocation, string fileName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ReadTextFromFileAsync(class Windows.Storage.StorageFolder fileLocation, string fileName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromFileAsync(Windows.Storage.StorageFolder,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="fileLocation" Type="Windows.Storage.StorageFolder" RefType="this" />
          <Parameter Name="fileName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="fileLocation">To be added.</param>
          <param name="fileName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromFileAsync(Windows.Storage.StorageFolder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Storage.StorageFolder" />
      </Targets>
      <Member MemberName="WriteBytesToFileAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteBytesToFileAsync (this Windows.Storage.StorageFolder fileLocation, byte[] bytes, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteBytesToFileAsync(class Windows.Storage.StorageFolder fileLocation, unsigned int8[] bytes, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToFileAsync(Windows.Storage.StorageFolder,System.Byte[],System.String,Windows.Storage.CreationCollisionOption)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="fileLocation" Type="Windows.Storage.StorageFolder" RefType="this" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="fileName" Type="System.String" />
          <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
        </Parameters>
        <Docs>
          <param name="fileLocation">To be added.</param>
          <param name="bytes">To be added.</param>
          <param name="fileName">To be added.</param>
          <param name="options">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToFileAsync(Windows.Storage.StorageFolder,System.Byte[],System.String,Windows.Storage.CreationCollisionOption)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Storage.StorageFolder" />
      </Targets>
      <Member MemberName="WriteTextToFileAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteTextToFileAsync (this Windows.Storage.StorageFolder fileLocation, string text, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteTextToFileAsync(class Windows.Storage.StorageFolder fileLocation, string text, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToFileAsync(Windows.Storage.StorageFolder,System.String,System.String,Windows.Storage.CreationCollisionOption)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="fileLocation" Type="Windows.Storage.StorageFolder" RefType="this" />
          <Parameter Name="text" Type="System.String" />
          <Parameter Name="fileName" Type="System.String" />
          <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
        </Parameters>
        <Docs>
          <param name="fileLocation">To be added.</param>
          <param name="text">To be added.</param>
          <param name="fileName">To be added.</param>
          <param name="options">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToFileAsync(Windows.Storage.StorageFolder,System.String,System.String,Windows.Storage.CreationCollisionOption)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Uri" />
      </Targets>
      <Member MemberName="GetHttpStreamAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.Streams.IRandomAccessStream&gt; GetHttpStreamAsync (this Uri uri, System.Threading.CancellationToken cancellationToken = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.Streams.IRandomAccessStream&gt; GetHttpStreamAsync(class System.Uri uri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StreamHelper.GetHttpStreamAsync(System.Uri,System.Threading.CancellationToken)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.Streams.IRandomAccessStream&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uri" Type="System.Uri" RefType="this" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
        <Docs>
          <param name="uri">To be added.</param>
          <param name="cancellationToken">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StreamHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StreamHelper.GetHttpStreamAsync(System.Uri,System.Threading.CancellationToken)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.Uri" />
      </Targets>
      <Member MemberName="GetHttpStreamToStorageFileAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task GetHttpStreamToStorageFileAsync (this Uri uri, Windows.Storage.StorageFile targetFile);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task GetHttpStreamToStorageFileAsync(class System.Uri uri, class Windows.Storage.StorageFile targetFile) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StreamHelper.GetHttpStreamToStorageFileAsync(System.Uri,Windows.Storage.StorageFile)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="uri" Type="System.Uri" RefType="this" />
          <Parameter Name="targetFile" Type="Windows.Storage.StorageFile" />
        </Parameters>
        <Docs>
          <param name="uri">To be added.</param>
          <param name="targetFile">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StreamHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StreamHelper.GetHttpStreamToStorageFileAsync(System.Uri,Windows.Storage.StorageFile)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Storage.StorageFolder" />
      </Targets>
      <Member MemberName="IsFileExistsAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; IsFileExistsAsync (this Windows.Storage.StorageFolder workingFolder, string fileName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; IsFileExistsAsync(class Windows.Storage.StorageFolder workingFolder, string fileName) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StreamHelper.IsFileExistsAsync(Windows.Storage.StorageFolder,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="workingFolder" Type="Windows.Storage.StorageFolder" RefType="this" />
          <Parameter Name="fileName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="workingFolder">To be added.</param>
          <param name="fileName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StreamHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StreamHelper.IsFileExistsAsync(Windows.Storage.StorageFolder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.Storage.Streams.IRandomAccessStream" />
      </Targets>
      <Member MemberName="ReadTextAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ReadTextAsync (this Windows.Storage.Streams.IRandomAccessStream stream, System.Text.Encoding encoding = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ReadTextAsync(class Windows.Storage.Streams.IRandomAccessStream stream, class System.Text.Encoding encoding) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StreamHelper.ReadTextAsync(Windows.Storage.Streams.IRandomAccessStream,System.Text.Encoding)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="stream" Type="Windows.Storage.Streams.IRandomAccessStream" RefType="this" />
          <Parameter Name="encoding" Type="System.Text.Encoding" />
        </Parameters>
        <Docs>
          <param name="stream">To be added.</param>
          <param name="encoding">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.Helpers.StreamHelper" Member="M:Microsoft.Toolkit.Uwp.Helpers.StreamHelper.ReadTextAsync(Windows.Storage.Streams.IRandomAccessStream,System.Text.Encoding)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.Media.Animation.Storyboard" />
      </Targets>
      <Member MemberName="BeginAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task BeginAsync (this Windows.UI.Xaml.Media.Animation.Storyboard storyboard);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task BeginAsync(class Windows.UI.Xaml.Media.Animation.Storyboard storyboard) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync(Windows.UI.Xaml.Media.Animation.Storyboard)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="storyboard" Type="Windows.UI.Xaml.Media.Animation.Storyboard" RefType="this" />
        </Parameters>
        <Docs>
          <param name="storyboard">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync(Windows.UI.Xaml.Media.Animation.Storyboard)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" />
      </Targets>
      <Member MemberName="Blur">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Blur (this Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, double value = 0, double duration = 500, double delay = 0);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Blur(class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float64 value, float64 duration, float64 delay) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="animationSet" Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" RefType="this" />
          <Parameter Name="value" Type="System.Double" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="animationSet">To be added.</param>
          <param name="value">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.FrameworkElement" />
      </Targets>
      <Member MemberName="Blur">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Blur (this Windows.UI.Xaml.FrameworkElement associatedObject, double value = 0, double duration = 500, double delay = 0);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Blur(class Windows.UI.Xaml.FrameworkElement associatedObject, float64 value, float64 duration, float64 delay) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="associatedObject" Type="Windows.UI.Xaml.FrameworkElement" RefType="this" />
          <Parameter Name="value" Type="System.Double" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="associatedObject">To be added.</param>
          <param name="value">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" />
      </Targets>
      <Member MemberName="Fade">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Fade (this Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float value = 0, double duration = 500, double delay = 0, Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType = Microsoft.Toolkit.Uwp.UI.Animations.EasingType.Default);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Fade(class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float32 value, float64 duration, float64 delay, valuetype Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="animationSet" Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" RefType="this" />
          <Parameter Name="value" Type="System.Single" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
          <Parameter Name="easingType" Type="Microsoft.Toolkit.Uwp.UI.Animations.EasingType" />
        </Parameters>
        <Docs>
          <param name="animationSet">To be added.</param>
          <param name="value">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <param name="easingType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.UIElement" />
      </Targets>
      <Member MemberName="Fade">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Fade (this Windows.UI.Xaml.UIElement associatedObject, float value = 0, double duration = 500, double delay = 0, Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType = Microsoft.Toolkit.Uwp.UI.Animations.EasingType.Default);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Fade(class Windows.UI.Xaml.UIElement associatedObject, float32 value, float64 duration, float64 delay, valuetype Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Windows.UI.Xaml.UIElement,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="associatedObject" Type="Windows.UI.Xaml.UIElement" RefType="this" />
          <Parameter Name="value" Type="System.Single" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
          <Parameter Name="easingType" Type="Microsoft.Toolkit.Uwp.UI.Animations.EasingType" />
        </Parameters>
        <Docs>
          <param name="associatedObject">To be added.</param>
          <param name="value">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <param name="easingType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Windows.UI.Xaml.UIElement,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" />
      </Targets>
      <Member MemberName="Light">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Light (this Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, double distance = 0, double duration = 500, double delay = 0);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Light(class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float64 distance, float64 duration, float64 delay) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="animationSet" Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" RefType="this" />
          <Parameter Name="distance" Type="System.Double" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="animationSet">To be added.</param>
          <param name="distance">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.FrameworkElement" />
      </Targets>
      <Member MemberName="Light">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Light (this Windows.UI.Xaml.FrameworkElement associatedObject, double distance = 0, double duration = 500, double delay = 0);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Light(class Windows.UI.Xaml.FrameworkElement associatedObject, float64 distance, float64 duration, float64 delay) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="associatedObject" Type="Windows.UI.Xaml.FrameworkElement" RefType="this" />
          <Parameter Name="distance" Type="System.Double" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="associatedObject">To be added.</param>
          <param name="distance">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" />
      </Targets>
      <Member MemberName="Offset">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Offset (this Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float offsetX = 0, float offsetY = 0, double duration = 500, double delay = 0, Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType = Microsoft.Toolkit.Uwp.UI.Animations.EasingType.Default);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Offset(class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float32 offsetX, float32 offsetY, float64 duration, float64 delay, valuetype Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="animationSet" Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" RefType="this" />
          <Parameter Name="offsetX" Type="System.Single" />
          <Parameter Name="offsetY" Type="System.Single" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
          <Parameter Name="easingType" Type="Microsoft.Toolkit.Uwp.UI.Animations.EasingType" />
        </Parameters>
        <Docs>
          <param name="animationSet">To be added.</param>
          <param name="offsetX">To be added.</param>
          <param name="offsetY">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <param name="easingType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.UIElement" />
      </Targets>
      <Member MemberName="Offset">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Offset (this Windows.UI.Xaml.UIElement associatedObject, float offsetX = 0, float offsetY = 0, double duration = 500, double delay = 0, Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType = Microsoft.Toolkit.Uwp.UI.Animations.EasingType.Default);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Offset(class Windows.UI.Xaml.UIElement associatedObject, float32 offsetX, float32 offsetY, float64 duration, float64 delay, valuetype Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="associatedObject" Type="Windows.UI.Xaml.UIElement" RefType="this" />
          <Parameter Name="offsetX" Type="System.Single" />
          <Parameter Name="offsetY" Type="System.Single" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
          <Parameter Name="easingType" Type="Microsoft.Toolkit.Uwp.UI.Animations.EasingType" />
        </Parameters>
        <Docs>
          <param name="associatedObject">To be added.</param>
          <param name="offsetX">To be added.</param>
          <param name="offsetY">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <param name="easingType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" />
      </Targets>
      <Member MemberName="Rotate">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Rotate (this Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float value = 0, float centerX = 0, float centerY = 0, double duration = 500, double delay = 0, Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType = Microsoft.Toolkit.Uwp.UI.Animations.EasingType.Default);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Rotate(class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float32 value, float32 centerX, float32 centerY, float64 duration, float64 delay, valuetype Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="animationSet" Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" RefType="this" />
          <Parameter Name="value" Type="System.Single" />
          <Parameter Name="centerX" Type="System.Single" />
          <Parameter Name="centerY" Type="System.Single" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
          <Parameter Name="easingType" Type="Microsoft.Toolkit.Uwp.UI.Animations.EasingType" />
        </Parameters>
        <Docs>
          <param name="animationSet">To be added.</param>
          <param name="value">To be added.</param>
          <param name="centerX">To be added.</param>
          <param name="centerY">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <param name="easingType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.UIElement" />
      </Targets>
      <Member MemberName="Rotate">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Rotate (this Windows.UI.Xaml.UIElement associatedObject, float value = 0, float centerX = 0, float centerY = 0, double duration = 500, double delay = 0, Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType = Microsoft.Toolkit.Uwp.UI.Animations.EasingType.Default);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Rotate(class Windows.UI.Xaml.UIElement associatedObject, float32 value, float32 centerX, float32 centerY, float64 duration, float64 delay, valuetype Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="associatedObject" Type="Windows.UI.Xaml.UIElement" RefType="this" />
          <Parameter Name="value" Type="System.Single" />
          <Parameter Name="centerX" Type="System.Single" />
          <Parameter Name="centerY" Type="System.Single" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
          <Parameter Name="easingType" Type="Microsoft.Toolkit.Uwp.UI.Animations.EasingType" />
        </Parameters>
        <Docs>
          <param name="associatedObject">To be added.</param>
          <param name="value">To be added.</param>
          <param name="centerX">To be added.</param>
          <param name="centerY">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <param name="easingType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" />
      </Targets>
      <Member MemberName="Saturation">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Saturation (this Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, double value = 0, double duration = 500, double delay = 0);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Saturation(class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float64 value, float64 duration, float64 delay) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="animationSet" Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" RefType="this" />
          <Parameter Name="value" Type="System.Double" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="animationSet">To be added.</param>
          <param name="value">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.FrameworkElement" />
      </Targets>
      <Member MemberName="Saturation">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Saturation (this Windows.UI.Xaml.FrameworkElement associatedObject, double value = 0, double duration = 500, double delay = 0);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Saturation(class Windows.UI.Xaml.FrameworkElement associatedObject, float64 value, float64 duration, float64 delay) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="associatedObject" Type="Windows.UI.Xaml.FrameworkElement" RefType="this" />
          <Parameter Name="value" Type="System.Double" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="associatedObject">To be added.</param>
          <param name="value">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" />
      </Targets>
      <Member MemberName="Scale">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Scale (this Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float scaleX = 1, float scaleY = 1, float centerX = 0, float centerY = 0, double duration = 500, double delay = 0, Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType = Microsoft.Toolkit.Uwp.UI.Animations.EasingType.Default);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Scale(class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet animationSet, float32 scaleX, float32 scaleY, float32 centerX, float32 centerY, float64 duration, float64 delay, valuetype Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="animationSet" Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" RefType="this" />
          <Parameter Name="scaleX" Type="System.Single" />
          <Parameter Name="scaleY" Type="System.Single" />
          <Parameter Name="centerX" Type="System.Single" />
          <Parameter Name="centerY" Type="System.Single" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
          <Parameter Name="easingType" Type="Microsoft.Toolkit.Uwp.UI.Animations.EasingType" />
        </Parameters>
        <Docs>
          <param name="animationSet">To be added.</param>
          <param name="scaleX">To be added.</param>
          <param name="scaleY">To be added.</param>
          <param name="centerX">To be added.</param>
          <param name="centerY">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <param name="easingType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.UIElement" />
      </Targets>
      <Member MemberName="Scale">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Scale (this Windows.UI.Xaml.UIElement associatedObject, float scaleX = 1, float scaleY = 1, float centerX = 0, float centerY = 0, double duration = 500, double delay = 0, Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType = Microsoft.Toolkit.Uwp.UI.Animations.EasingType.Default);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Scale(class Windows.UI.Xaml.UIElement associatedObject, float32 scaleX, float32 scaleY, float32 centerX, float32 centerY, float64 duration, float64 delay, valuetype Microsoft.Toolkit.Uwp.UI.Animations.EasingType easingType) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="associatedObject" Type="Windows.UI.Xaml.UIElement" RefType="this" />
          <Parameter Name="scaleX" Type="System.Single" />
          <Parameter Name="scaleY" Type="System.Single" />
          <Parameter Name="centerX" Type="System.Single" />
          <Parameter Name="centerY" Type="System.Single" />
          <Parameter Name="duration" Type="System.Double" />
          <Parameter Name="delay" Type="System.Double" />
          <Parameter Name="easingType" Type="Microsoft.Toolkit.Uwp.UI.Animations.EasingType" />
        </Parameters>
        <Docs>
          <param name="associatedObject">To be added.</param>
          <param name="scaleX">To be added.</param>
          <param name="scaleY">To be added.</param>
          <param name="centerX">To be added.</param>
          <param name="centerY">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="delay">To be added.</param>
          <param name="easingType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.AmbientLight" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode GetReference (this Windows.UI.Composition.AmbientLight compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode GetReference(class Windows.UI.Composition.AmbientLight compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.AmbientLight)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.AmbientLight" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.AmbientLight)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.CompositionColorBrush" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode GetReference (this Windows.UI.Composition.CompositionColorBrush compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode GetReference(class Windows.UI.Composition.CompositionColorBrush compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionColorBrush)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.CompositionColorBrush" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionColorBrush)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.CompositionNineGridBrush" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode GetReference (this Windows.UI.Composition.CompositionNineGridBrush compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode GetReference(class Windows.UI.Composition.CompositionNineGridBrush compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionNineGridBrush)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.CompositionNineGridBrush" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionNineGridBrush)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.CompositionPropertySet" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode GetReference (this Windows.UI.Composition.CompositionPropertySet compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode GetReference(class Windows.UI.Composition.CompositionPropertySet compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionPropertySet)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.CompositionPropertySet" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionPropertySet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.CompositionSurfaceBrush" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode GetReference (this Windows.UI.Composition.CompositionSurfaceBrush compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode GetReference(class Windows.UI.Composition.CompositionSurfaceBrush compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionSurfaceBrush)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.CompositionSurfaceBrush" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionSurfaceBrush)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.DistantLight" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode GetReference (this Windows.UI.Composition.DistantLight compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode GetReference(class Windows.UI.Composition.DistantLight compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DistantLight)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.DistantLight" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DistantLight)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.DropShadow" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode GetReference (this Windows.UI.Composition.DropShadow compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode GetReference(class Windows.UI.Composition.DropShadow compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DropShadow)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.DropShadow" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DropShadow)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.InsetClip" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode GetReference (this Windows.UI.Composition.InsetClip compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode GetReference(class Windows.UI.Composition.InsetClip compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.InsetClip)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.InsetClip" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.InsetClip)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.Interactions.InteractionTracker" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode GetReference (this Windows.UI.Composition.Interactions.InteractionTracker compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode GetReference(class Windows.UI.Composition.Interactions.InteractionTracker compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Interactions.InteractionTracker)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.Interactions.InteractionTracker" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Interactions.InteractionTracker)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.PointLight" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode GetReference (this Windows.UI.Composition.PointLight compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode GetReference(class Windows.UI.Composition.PointLight compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.PointLight)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.PointLight" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.PointLight)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.SpotLight" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode GetReference (this Windows.UI.Composition.SpotLight compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode GetReference(class Windows.UI.Composition.SpotLight compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.SpotLight)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.SpotLight" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.SpotLight)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.Visual" />
      </Targets>
      <Member MemberName="GetReference">
        <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode GetReference (this Windows.UI.Composition.Visual compObj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode GetReference(class Windows.UI.Composition.Visual compObj) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Visual)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObj" Type="Windows.UI.Composition.Visual" RefType="this" />
        </Parameters>
        <Docs>
          <param name="compObj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Visual)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.CompositionPropertySet" />
      </Targets>
      <Member MemberName="GetSpecializedReference&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T GetSpecializedReference&lt;T&gt; (this Windows.UI.Composition.CompositionPropertySet ps) where T : Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetSpecializedReference&lt;(class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode) T&gt;(class Windows.UI.Composition.CompositionPropertySet ps) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference``1(Windows.UI.Composition.CompositionPropertySet)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="ps" Type="Windows.UI.Composition.CompositionPropertySet" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="ps">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference``1(Windows.UI.Composition.CompositionPropertySet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.KeyFrameAnimation" />
      </Targets>
      <Member MemberName="InsertExpressionKeyFrame">
        <MemberSignature Language="C#" Value="public static void InsertExpressionKeyFrame (this Windows.UI.Composition.KeyFrameAnimation keyframeAnimation, float normalizedProgressKey, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode, Windows.UI.Composition.CompositionEasingFunction easing = null);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InsertExpressionKeyFrame(class Windows.UI.Composition.KeyFrameAnimation keyframeAnimation, float32 normalizedProgressKey, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode, class Windows.UI.Composition.CompositionEasingFunction easing) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame(Windows.UI.Composition.KeyFrameAnimation,System.Single,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode,Windows.UI.Composition.CompositionEasingFunction)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="keyframeAnimation" Type="Windows.UI.Composition.KeyFrameAnimation" RefType="this" />
          <Parameter Name="normalizedProgressKey" Type="System.Single" />
          <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
          <Parameter Name="easing" Type="Windows.UI.Composition.CompositionEasingFunction" />
        </Parameters>
        <Docs>
          <param name="keyframeAnimation">To be added.</param>
          <param name="normalizedProgressKey">To be added.</param>
          <param name="expressionNode">To be added.</param>
          <param name="easing">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame(Windows.UI.Composition.KeyFrameAnimation,System.Single,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode,Windows.UI.Composition.CompositionEasingFunction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion" />
      </Targets>
      <Member MemberName="SetCondition">
        <MemberSignature Language="C#" Value="public static void SetCondition (this Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCondition(class Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion" RefType="this" />
          <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
        </Parameters>
        <Docs>
          <param name="modifier">To be added.</param>
          <param name="expressionNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue" />
      </Targets>
      <Member MemberName="SetCondition">
        <MemberSignature Language="C#" Value="public static void SetCondition (this Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCondition(class Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue" RefType="this" />
          <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
        </Parameters>
        <Docs>
          <param name="modifier">To be added.</param>
          <param name="expressionNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion" />
      </Targets>
      <Member MemberName="SetMotion">
        <MemberSignature Language="C#" Value="public static void SetMotion (this Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMotion(class Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion" RefType="this" />
          <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
        </Parameters>
        <Docs>
          <param name="modifier">To be added.</param>
          <param name="expressionNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue" />
      </Targets>
      <Member MemberName="SetRestingValue">
        <MemberSignature Language="C#" Value="public static void SetRestingValue (this Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRestingValue(class Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue" RefType="this" />
          <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
        </Parameters>
        <Docs>
          <param name="modifier">To be added.</param>
          <param name="expressionNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Composition.CompositionObject" />
      </Targets>
      <Member MemberName="StartAnimation">
        <MemberSignature Language="C#" Value="public static void StartAnimation (this Windows.UI.Composition.CompositionObject compObject, string propertyName, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartAnimation(class Windows.UI.Composition.CompositionObject compObject, string propertyName, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation(Windows.UI.Composition.CompositionObject,System.String,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="compObject" Type="Windows.UI.Composition.CompositionObject" RefType="this" />
          <Parameter Name="propertyName" Type="System.String" />
          <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
        </Parameters>
        <Docs>
          <param name="compObject">To be added.</param>
          <param name="propertyName">To be added.</param>
          <param name="expressionNode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" Member="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation(Windows.UI.Composition.CompositionObject,System.String,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.FrameworkElement" />
      </Targets>
      <Member MemberName="FindChild&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T FindChild&lt;T&gt; (this Windows.UI.Xaml.FrameworkElement element) where T : Windows.UI.Xaml.FrameworkElement;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FindChild&lt;(class Windows.UI.Xaml.FrameworkElement) T&gt;(class Windows.UI.Xaml.FrameworkElement element) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindChild``1(Windows.UI.Xaml.FrameworkElement)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>Windows.UI.Xaml.FrameworkElement</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.FrameworkElement" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="element">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindChild``1(Windows.UI.Xaml.FrameworkElement)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.FrameworkElement" />
      </Targets>
      <Member MemberName="FindChildByName">
        <MemberSignature Language="C#" Value="public static Windows.UI.Xaml.FrameworkElement FindChildByName (this Windows.UI.Xaml.FrameworkElement element, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.UI.Xaml.FrameworkElement FindChildByName(class Windows.UI.Xaml.FrameworkElement element, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindChildByName(Windows.UI.Xaml.FrameworkElement,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Windows.UI.Xaml.FrameworkElement</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.FrameworkElement" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="element">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindChildByName(Windows.UI.Xaml.FrameworkElement,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.FrameworkElement" />
      </Targets>
      <Member MemberName="FindChildren&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; FindChildren&lt;T&gt; (this Windows.UI.Xaml.FrameworkElement element) where T : Windows.UI.Xaml.FrameworkElement;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; FindChildren&lt;(class Windows.UI.Xaml.FrameworkElement) T&gt;(class Windows.UI.Xaml.FrameworkElement element) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindChildren``1(Windows.UI.Xaml.FrameworkElement)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>Windows.UI.Xaml.FrameworkElement</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.FrameworkElement" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="element">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindChildren``1(Windows.UI.Xaml.FrameworkElement)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.FrameworkElement" />
      </Targets>
      <Member MemberName="FindParent&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T FindParent&lt;T&gt; (this Windows.UI.Xaml.FrameworkElement element) where T : Windows.UI.Xaml.FrameworkElement;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FindParent&lt;(class Windows.UI.Xaml.FrameworkElement) T&gt;(class Windows.UI.Xaml.FrameworkElement element) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindParent``1(Windows.UI.Xaml.FrameworkElement)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>Windows.UI.Xaml.FrameworkElement</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.FrameworkElement" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="element">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindParent``1(Windows.UI.Xaml.FrameworkElement)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.FrameworkElement" />
      </Targets>
      <Member MemberName="FindParentByName">
        <MemberSignature Language="C#" Value="public static Windows.UI.Xaml.FrameworkElement FindParentByName (this Windows.UI.Xaml.FrameworkElement element, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.UI.Xaml.FrameworkElement FindParentByName(class Windows.UI.Xaml.FrameworkElement element, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindParentByName(Windows.UI.Xaml.FrameworkElement,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Windows.UI.Xaml.FrameworkElement</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.FrameworkElement" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="element">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.FindParentByName(Windows.UI.Xaml.FrameworkElement,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.FrameworkElement" />
      </Targets>
      <Member MemberName="GetContentControl">
        <MemberSignature Language="C#" Value="public static Windows.UI.Xaml.UIElement GetContentControl (this Windows.UI.Xaml.FrameworkElement element);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.UI.Xaml.UIElement GetContentControl(class Windows.UI.Xaml.FrameworkElement element) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.GetContentControl(Windows.UI.Xaml.FrameworkElement)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Windows.UI.Xaml.UIElement</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.FrameworkElement" RefType="this" />
        </Parameters>
        <Docs>
          <param name="element">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.LogicalTree.GetContentControl(Windows.UI.Xaml.FrameworkElement)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.DependencyObject" />
      </Targets>
      <Member MemberName="FindAscendant&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T FindAscendant&lt;T&gt; (this Windows.UI.Xaml.DependencyObject element) where T : Windows.UI.Xaml.DependencyObject;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FindAscendant&lt;(class Windows.UI.Xaml.DependencyObject) T&gt;(class Windows.UI.Xaml.DependencyObject element) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindAscendant``1(Windows.UI.Xaml.DependencyObject)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>Windows.UI.Xaml.DependencyObject</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.DependencyObject" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="element">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindAscendant``1(Windows.UI.Xaml.DependencyObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.DependencyObject" />
      </Targets>
      <Member MemberName="FindAscendantByName">
        <MemberSignature Language="C#" Value="public static Windows.UI.Xaml.FrameworkElement FindAscendantByName (this Windows.UI.Xaml.DependencyObject element, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.UI.Xaml.FrameworkElement FindAscendantByName(class Windows.UI.Xaml.DependencyObject element, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindAscendantByName(Windows.UI.Xaml.DependencyObject,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Windows.UI.Xaml.FrameworkElement</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.DependencyObject" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="element">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindAscendantByName(Windows.UI.Xaml.DependencyObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.DependencyObject" />
      </Targets>
      <Member MemberName="FindDescendant&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T FindDescendant&lt;T&gt; (this Windows.UI.Xaml.DependencyObject element) where T : Windows.UI.Xaml.DependencyObject;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FindDescendant&lt;(class Windows.UI.Xaml.DependencyObject) T&gt;(class Windows.UI.Xaml.DependencyObject element) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendant``1(Windows.UI.Xaml.DependencyObject)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>Windows.UI.Xaml.DependencyObject</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.DependencyObject" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="element">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendant``1(Windows.UI.Xaml.DependencyObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.DependencyObject" />
      </Targets>
      <Member MemberName="FindDescendantByName">
        <MemberSignature Language="C#" Value="public static Windows.UI.Xaml.FrameworkElement FindDescendantByName (this Windows.UI.Xaml.DependencyObject element, string name);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.UI.Xaml.FrameworkElement FindDescendantByName(class Windows.UI.Xaml.DependencyObject element, string name) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendantByName(Windows.UI.Xaml.DependencyObject,System.String)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>Windows.UI.Xaml.FrameworkElement</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.DependencyObject" RefType="this" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="element">To be added.</param>
          <param name="name">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendantByName(Windows.UI.Xaml.DependencyObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:Windows.UI.Xaml.DependencyObject" />
      </Targets>
      <Member MemberName="FindDescendants&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; FindDescendants&lt;T&gt; (this Windows.UI.Xaml.DependencyObject element) where T : Windows.UI.Xaml.DependencyObject;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; FindDescendants&lt;(class Windows.UI.Xaml.DependencyObject) T&gt;(class Windows.UI.Xaml.DependencyObject element) cil managed" />
        <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendants``1(Windows.UI.Xaml.DependencyObject)" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>Windows.UI.Xaml.DependencyObject</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="element" Type="Windows.UI.Xaml.DependencyObject" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="element">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree" Member="M:Microsoft.Toolkit.Uwp.UI.Extensions.VisualTree.FindDescendants``1(Windows.UI.Xaml.DependencyObject)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
