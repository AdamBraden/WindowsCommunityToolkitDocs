<Type Name="MarkDownFormatter" FullName="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter">
  <TypeSignature Language="C#" Value="public class MarkDownFormatter : Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MarkDownFormatter extends Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MarkDownFormatter (Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButtons">
      <MemberSignature Language="C#" Value="public override Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ButtonMap DefaultButtons { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ButtonMap DefaultButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.DefaultButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ButtonMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineInlineWrapListReverse">
      <MemberSignature Language="C#" Value="protected virtual bool DetermineInlineWrapListReverse (Func&lt;string&gt; listChar);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DetermineInlineWrapListReverse(class System.Func`1&lt;string&gt; listChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.DetermineInlineWrapListReverse(System.Func{System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChar" Type="System.Func&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listChar">List character generating function</param>
        <summary>
            Determines if a reverse is requested, if the list characters are inside the Selection.
            </summary>
        <returns>Is it reversing?</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineListReverse">
      <MemberSignature Language="C#" Value="protected virtual bool DetermineListReverse (Func&lt;string&gt; listChar, bool wrapNewLines);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DetermineListReverse(class System.Func`1&lt;string&gt; listChar, bool wrapNewLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.DetermineListReverse(System.Func{System.String},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChar" Type="System.Func&lt;System.String&gt;" />
        <Parameter Name="wrapNewLines" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="listChar">Function to generate the List Character</param>
        <param name="wrapNewLines">Adds New Lines to Start and End of Selected Text</param>
        <summary>
            Determines whether a List already has the formatting applied.
            </summary>
        <returns>True if List formatting is reversing, otherwise false</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineSimpleInlineReverse">
      <MemberSignature Language="C#" Value="protected virtual bool DetermineSimpleInlineReverse (string start, string end);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DetermineSimpleInlineReverse(string start, string end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.DetermineSimpleInlineReverse(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.String" />
        <Parameter Name="end" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="start">Formatting in front of Text</param>
        <param name="end">Formatting at end of Text</param>
        <summary>
            Determines if formatting is to be reversed, when the formatting is located inside the Selectors.
            </summary>
        <returns>True if formatting is reversing, otherwise false</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetermineSimpleReverse">
      <MemberSignature Language="C#" Value="protected virtual bool DetermineSimpleReverse (string start, string end);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DetermineSimpleReverse(string start, string end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.DetermineSimpleReverse(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.String" />
        <Parameter Name="end" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="start">Formatting in front of Text</param>
        <param name="end">Formatting at end of Text</param>
        <summary>
            Determines if formatting is to be reversed
            </summary>
        <returns>True if formatting is reversing, otherwise false</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatCode">
      <MemberSignature Language="C#" Value="public void FormatCode (Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatCode(class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.FormatCode(Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton" />
      </Parameters>
      <Docs>
        <param name="button">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatQuote">
      <MemberSignature Language="C#" Value="public void FormatQuote (Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatQuote(class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.FormatQuote(Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton" />
      </Parameters>
      <Docs>
        <param name="button">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListLineIterator">
      <MemberSignature Language="C#" Value="public int ListLineIterator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListLineIterator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.ListLineIterator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the value of the Line Number Iterator. Use this for generating Numbered Lists.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public override string NewLineChars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.NewLineChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReachedEndLine">
      <MemberSignature Language="C#" Value="public bool ReachedEndLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReachedEndLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.ReachedEndLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether gets whether it is the last line of the list.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetList">
      <MemberSignature Language="C#" Value="public virtual void SetList (Func&lt;string&gt; listChar, Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton button, bool wrapNewLines = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetList(class System.Func`1&lt;string&gt; listChar, class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton button, bool wrapNewLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.SetList(System.Func{System.String},Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChar" Type="System.Func&lt;System.String&gt;" />
        <Parameter Name="button" Type="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton" />
        <Parameter Name="wrapNewLines" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="listChar">A function for generating a List Character, use ListLineIterator to generate a Numbered Style List, or return a string Result, e.g. () =&gt; "- "</param>
        <param name="button">Button that activated the Set List</param>
        <param name="wrapNewLines">Adds New Lines to Start and End of Selected Text</param>
        <summary>
             This function will either add List Characters to lines of text, or Remove List Characters from Lines of Text, if already applied.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelection">
      <MemberSignature Language="C#" Value="public virtual void SetSelection (string start, string end, bool reversible = true, string contents = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelection(string start, string end, bool reversible, string contents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.SetSelection(System.String,System.String,System.Boolean,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.String" />
        <Parameter Name="end" Type="System.String" />
        <Parameter Name="reversible" Type="System.Boolean" />
        <Parameter Name="contents" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="start">Formatting in front of Text</param>
        <param name="end">Formatting at end of Text</param>
        <param name="reversible">Is the Text reversible?</param>
        <param name="contents">Text to insert between Start and End (Overwrites Current Text)</param>
        <summary>
            Applies formatting to Selected Text, or Removes formatting if already applied.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleHeader">
      <MemberSignature Language="C#" Value="public void StyleHeader (Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StyleHeader(class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.StyleHeader(Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ToolbarButton" />
      </Parameters>
      <Docs>
        <param name="button">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.MarkDown.MarkDownFormatter.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
