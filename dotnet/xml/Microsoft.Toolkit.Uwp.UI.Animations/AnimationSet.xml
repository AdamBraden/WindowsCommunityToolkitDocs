<Type Name="AnimationSet" FullName="Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet">
  <TypeSignature Language="C#" Value="public class AnimationSet : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnimationSet extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Defines an object for storing and managing CompositionAnimations for an element
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnimationSet (Windows.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Windows.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.#ctor(Windows.UI.Xaml.UIElement)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="element" Type="Windows.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">The associated element</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCompositionAnimation">
      <MemberSignature Language="C#" Value="public void AddCompositionAnimation (string propertyName, Windows.UI.Composition.CompositionAnimation animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCompositionAnimation(string propertyName, class Windows.UI.Composition.CompositionAnimation animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionAnimation(System.String,Windows.UI.Composition.CompositionAnimation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="animation" Type="Windows.UI.Composition.CompositionAnimation" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property to be animated on the backing Visual</param>
        <param name="animation">The <see cref="T:Windows.UI.Composition.CompositionAnimation" /> to be applied</param>
        <summary>
            Adds a composition animation to be run on <see cref="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCompositionDirectPropertyChange">
      <MemberSignature Language="C#" Value="public void AddCompositionDirectPropertyChange (string propertyName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCompositionDirectPropertyChange(string propertyName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionDirectPropertyChange(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property to be animated on the backing Visual</param>
        <param name="value">The value to be applied</param>
        <summary>
            Adds a composition property that will change instantaneously
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCompositionEffectAnimation">
      <MemberSignature Language="C#" Value="public void AddCompositionEffectAnimation (Windows.UI.Composition.CompositionObject effectBrush, Windows.UI.Composition.CompositionAnimation animation, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCompositionEffectAnimation(class Windows.UI.Composition.CompositionObject effectBrush, class Windows.UI.Composition.CompositionAnimation animation, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionEffectAnimation(Windows.UI.Composition.CompositionObject,Windows.UI.Composition.CompositionAnimation,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectBrush" Type="Windows.UI.Composition.CompositionObject" />
        <Parameter Name="animation" Type="Windows.UI.Composition.CompositionAnimation" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="effectBrush">The <see cref="T:Windows.UI.Composition.CompositionEffectBrush" /> that will have a property animated</param>
        <param name="animation">The animation to be applied</param>
        <param name="propertyName">The property of the effect to be animated</param>
        <summary>
            Adds a composition effect animation to be run on backing <see cref="P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStoryboardAnimation">
      <MemberSignature Language="C#" Value="public void AddStoryboardAnimation (string propertyPath, Windows.UI.Xaml.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddStoryboardAnimation(string propertyPath, class Windows.UI.Xaml.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddStoryboardAnimation(System.String,Windows.UI.Xaml.Media.Animation.Timeline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyPath" Type="System.String" />
        <Parameter Name="timeline" Type="Windows.UI.Xaml.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="propertyPath">The property to be animated with Storyboards</param>
        <param name="timeline">The timeline object to be added to storyboard</param>
        <summary>
            Adds a storyboard animation to be run
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Completed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when all animations have completed
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Dispose resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public Windows.UI.Xaml.UIElement Element { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Windows.UI.Xaml.UIElement Element" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Element" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.UI.Xaml.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Windows.UI.Xaml.UIElement" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCompositionAnimation">
      <MemberSignature Language="C#" Value="public void RemoveCompositionAnimation (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCompositionAnimation(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionAnimation(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property that no longer needs to be animated</param>
        <summary>
            Removes a composition animation from being run on <see cref="P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual" /> property
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCompositionDirectPropertyChange">
      <MemberSignature Language="C#" Value="public void RemoveCompositionDirectPropertyChange (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCompositionDirectPropertyChange(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionDirectPropertyChange(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property that no longer needs to be changed</param>
        <summary>
            Removes a composition property change
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelay">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDelay (double delayTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDelay(float64 delayTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="delayTime">The delay time in milliseconds</param>
        <summary>
            Ovewrites the delay time on all animations after last Then()
            to the specified value
            </summary>
        <returns>AnimationSet to allow chaining</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelay">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDelay (TimeSpan delayTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDelay(valuetype System.TimeSpan delayTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delayTime">
          <see cref="T:System.TimeSpan" /> for how much to delay</param>
        <summary>
            Ovewrites the delay time on all animations after last Then()
            to the specified value
            </summary>
        <returns>AnimationSet to allow chaining</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelayForAll">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDelayForAll (double delayTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDelayForAll(float64 delayTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="delayTime">The delay time in milliseconds</param>
        <summary>
            Ovewrites the delay time on all animations to the specified value
            </summary>
        <returns>AnimationSet to allow chaining</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelayForAll">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDelayForAll (TimeSpan delayTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDelayForAll(valuetype System.TimeSpan delayTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delayTime">
          <see cref="T:System.TimeSpan" /> for how much to delay</param>
        <summary>
            Ovewrites the delay time on all animations to the specified value
            </summary>
        <returns>AnimationSet to allow chaining</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDuration (double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDuration(float64 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="duration">The duration in milliseconds</param>
        <summary>
            Ovewrites the duration on all animations after last Then()
            to the specified value
            </summary>
        <returns>AnimationSet to allow chaining</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDuration (TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDuration(valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="duration">
          <see cref="T:System.TimeSpan" /> for the duration</param>
        <summary>
            Ovewrites the duration on all animations after last Then()
            to the specified value
            </summary>
        <returns>AnimationSet to allow chaining</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDurationForAll">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDurationForAll (double duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDurationForAll(float64 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="duration">The duration in milliseconds</param>
        <summary>
            Ovewrites the duration on all animations to the specified value
            </summary>
        <returns>AnimationSet to allow chaining</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDurationForAll">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDurationForAll (TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet SetDurationForAll(valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="duration">
          <see cref="T:System.TimeSpan" /> for the duration</param>
        <summary>
            Ovewrites the duration on all animations to the specified value
            </summary>
        <returns>AnimationSet to allow chaining</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet/&lt;Start&gt;d__33))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stats all animations. This method is not awaitable.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; StartAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; StartAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet/&lt;StartAsync&gt;d__34))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts all animations and returns an awaitable task.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that can be awaited until all animations have completed</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetState State" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current state of the AnimationSet
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Stop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stops all animations.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Then">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Then ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet Then() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Then" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Wait for existing animations to complete before running new animations
            </summary>
        <returns>AnimationSet to allow chaining</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseComposition">
      <MemberSignature Language="C#" Value="public static bool UseComposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseComposition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.UseComposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether composition must be use even on SDK &gt; 10586
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visual">
      <MemberSignature Language="C#" Value="public Windows.UI.Composition.Visual Visual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Windows.UI.Composition.Visual Visual" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.UI.Composition.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual" /> object that backs the XAML element
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
