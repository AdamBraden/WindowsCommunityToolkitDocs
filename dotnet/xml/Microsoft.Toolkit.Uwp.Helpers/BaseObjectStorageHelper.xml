<Type Name="BaseObjectStorageHelper" FullName="Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper">
  <TypeSignature Language="C#" Value="public abstract class BaseObjectStorageHelper : Microsoft.Toolkit.Uwp.Helpers.IObjectStorageHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseObjectStorageHelper extends System.Object implements class Microsoft.Toolkit.Uwp.Helpers.IObjectStorageHelper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Toolkit.Uwp.Helpers.IObjectStorageHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Shared implementation of ObjectStorageHelper
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseObjectStorageHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExistsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; FileExistsAsync (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; FileExistsAsync(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.FileExistsAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">Key of the file (that contains object)</param>
        <summary>
            Detect if a file already exists
            </summary>
        <returns>True if a value exists</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Folder">
      <MemberSignature Language="C#" Value="protected Windows.Storage.StorageFolder Folder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Windows.Storage.StorageFolder Folder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.Folder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Storage.StorageFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets storage folder
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExists">
      <MemberSignature Language="C#" Value="public bool KeyExists (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool KeyExists(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.KeyExists(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Key of the setting (that contains object)</param>
        <summary>
            Detect if a setting already exists
            </summary>
        <returns>True if a value exists</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExists">
      <MemberSignature Language="C#" Value="public bool KeyExists (string compositeKey, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool KeyExists(string compositeKey, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.KeyExists(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositeKey" Type="System.String" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compositeKey">Key of the composite (that contains settings)</param>
        <param name="key">Key of the setting (that contains object)</param>
        <summary>
            Detect if a setting already exists in composite.
            </summary>
        <returns>True if a value exists</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Read&lt;T&gt; (string key, T default = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Read&lt;T&gt;(string key, !!T default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.Read``1(System.String,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="default" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of object retrieved</typeparam>
        <param name="key">Key of the object</param>
        <param name="default">Default value of the object</param>
        <summary>
            Retrieve single item by its key.
            </summary>
        <returns>The T object</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Read&lt;T&gt; (string compositeKey, string key, T default = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Read&lt;T&gt;(string compositeKey, string key, !!T default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.Read``1(System.String,System.String,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="compositeKey" Type="System.String" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="default" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of object retrieved</typeparam>
        <param name="compositeKey">Key of the composite (that contains settings)</param>
        <param name="key">Key of the object</param>
        <param name="default">Default value of the object</param>
        <summary>
            Retrieve single item by its key in composite.
            </summary>
        <returns>The T object</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFileAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; ReadFileAsync&lt;T&gt; (string filePath, T default = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; ReadFileAsync&lt;T&gt;(string filePath, !!T default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.ReadFileAsync``1(System.String,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper/&lt;ReadFileAsync&gt;d__16`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="default" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of object retrieved</typeparam>
        <param name="filePath">Path to the file that contains the object</param>
        <param name="default">Default value of the object</param>
        <summary>
            Retrieve object from file.
            </summary>
        <returns>Waiting task until completion with the object in the file</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Save&lt;T&gt; (string compositeKey, System.Collections.Generic.IDictionary&lt;string,T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save&lt;T&gt;(string compositeKey, class System.Collections.Generic.IDictionary`2&lt;string, !!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.Save``1(System.String,System.Collections.Generic.IDictionary{System.String,``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="compositeKey" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IDictionary&lt;System.String,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of object saved</typeparam>
        <param name="compositeKey">Key of the composite (that contains settings)</param>
        <param name="values">Objects to save</param>
        <summary>
            Save a group of items by its key in a composite.
            This method should be considered for objects that do not exceed 8k bytes during the lifetime of the application
            (refers to <see cref="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.SaveFileAsync``1(System.String,``0)" /> for complex/large objects) and for groups of settings which
            need to be treated in an atomic way.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Save&lt;T&gt; (string key, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save&lt;T&gt;(string key, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.Save``1(System.String,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of object saved</typeparam>
        <param name="key">Key of the value saved</param>
        <param name="value">Object to save</param>
        <summary>
            Save single item by its key.
            This method should be considered for objects that do not exceed 8k bytes during the lifetime of the application
            (refers to <see cref="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.SaveFileAsync``1(System.String,``0)" /> for complex/large objects).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveFileAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; SaveFileAsync&lt;T&gt; (string filePath, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; SaveFileAsync&lt;T&gt;(string filePath, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.SaveFileAsync``1(System.String,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of object saved</typeparam>
        <param name="filePath">Path to the file that will contain the object</param>
        <param name="value">Object to save</param>
        <summary>
            Save object inside file.
            There is no limitation to use this method (refers to <see cref="M:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.Save``1(System.String,``0)" /> method for simple objects).
            </summary>
        <returns>When this method completes, it returns the <see cref="T:Windows.Storage.StorageFile" /> where the object was saved</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="protected Windows.Storage.ApplicationDataContainer Settings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Windows.Storage.ApplicationDataContainer Settings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.Helpers.BaseObjectStorageHelper.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Storage.ApplicationDataContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets settings container
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
